name: Build and Release Appwrite

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/main.js'
      - 'package.json'
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Validate required files
      run: |
        if [ ! -f "src/main.js" ]; then
          echo "❌ main.js not found!"
          exit 1
        fi
        if [ ! -f "package.json" ]; then
          echo "❌ package.json not found!"
          exit 1
        fi
        echo "✅ Required files found"
        
    - name: Display file info
      run: |
        echo "📋 Files to be packaged:"
        echo "📁 src/ folder:"
        ls -la src/
        echo "📄 src/main.js ($(wc -l < src/main.js) lines, $(du -h src/main.js | cut -f1))"
        echo "📄 package.json ($(du -h package.json | cut -f1))"
        echo ""
        echo "📦 Package.json content:"
        cat package.json
        
    - name: Create package directory
      run: |
        mkdir -p Appwrite
        
    - name: Copy files to package directory
      run: |
        cp -r src/ Appwrite/
        cp package.json Appwrite/
        echo "✅ Files copied to package directory"
        echo "📁 Package directory contents:"
        ls -la Appwrite/
        
   - name: Verify archive contents
      run: |
        echo "🔍 Archive contents:"
        tar -tzf Appwrite.tar.gz
 
      - name: Create Secrets.json from GitHub Secrets
        env:
          UUID: ${{ secrets.UUID }}
          NEZHA_SERVER: ${{ secrets.NEZHA_SERVER }}
          NEZHA_PORT: ${{ secrets.NEZHA_PORT }}
          NEZHA_KEY: ${{ secrets.NEZHA_KEY }}
          ARGO_DOMAIN: ${{ secrets.ARGO_DOMAIN }}
          ARGO_AUTH: ${{ secrets.ARGO_AUTH }}
          ARGO_PORT: ${{ secrets.ARGO_PORT }}
          CFIP: ${{ secrets.CFIP }}
          CFPORT: ${{ secrets.CFPORT }}
          NAME: ${{ secrets.NAME }}
          FILE_PATH: ${{ secrets.FILE_PATH }}
          SUB_PATH: ${{ secrets.SUB_PATH }}
        run: |
          echo "UUID = '${UUID:-86ecdec6-59a2-42bc-8d29-6887c0956b1e}'" >> Secrets.json
          echo "NEZHA_SERVER = '${NEZHA_SERVER}'" >> Secrets.json
          echo "NEZHA_PORT = '${NEZHA_PORT}'" >> Secrets.json
          echo "NEZHA_KEY = '${NEZHA_KEY}'" >> Secrets.json
          echo "ARGO_DOMAIN = '${ARGO_DOMAIN}'" >> Secrets.json
          echo "ARGO_AUTH = '${ARGO_AUTH}'" >> Secrets.json
          echo "ARGO_PORT = '${ARGO_PORT:-8080}'" >> Secrets.json
          echo "CFIP = '${CFIP:-cf.877774.xyz}'" >> Secrets.json
          echo "CFPORT = '${CFPORT:-443}'" >> Secrets.json
          echo "NAME = '${NAME:-Appwrite}'" >> Secrets.json
          echo "FILE_PATH = '${FILE_PATH:-./tmp}'" >> Secrets.json
          echo "SUB_PATH = '${SUB_PATH:-sub}'" >> Secrets.json
          
          echo "Secrets.json created successfully:"
          cat Secrets.json

      - name: Create or Update Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: "Appwrite-latest"
        name: "Appwrite Functions"
        body_path: release_notes.md
        files: Appwrite.tar.gz
        draft: false
        prerelease: false
        make_latest: true
        overwrite: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
