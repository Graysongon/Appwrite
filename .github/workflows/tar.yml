name: Deploy to Appwrite

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 1,30 * *'  # 每30天运行一次(UTC时间0点)

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          
        - name: Checkout code
         uses: actions/checkout@v4
      
        - name: Setup Node.js
         uses: actions/setup-node@v4
            with:
        node-version: '18' 

      - name: Update package dependencies
        run: |
          package update

      # creat Secrets.json 
      - name: Create Secrets.json from GitHub Secrets
        env:
          UUID: ${{ secrets.UUID }}
          NEZHA_SERVER: ${{ secrets.NEZHA_SERVER }}
          NEZHA_PORT: ${{ secrets.NEZHA_PORT }}
          NEZHA_KEY: ${{ secrets.NEZHA_KEY }}
          ARGO_DOMAIN: ${{ secrets.ARGO_DOMAIN }}
          ARGO_AUTH: ${{ secrets.ARGO_AUTH }}
          ARGO_PORT: ${{ secrets.ARGO_PORT }}
          CFIP: ${{ secrets.CFIP }}
          CFPORT: ${{ secrets.CFPORT }}
          NAME: ${{ secrets.NAME }}
          FILE_PATH: ${{ secrets.FILE_PATH }}
          SUB_PATH: ${{ secrets.SUB_PATH }}
        run: |
          echo "UUID = '${UUID:-86ecdec6-59a2-42bc-8d29-6887c0956b1e}'" >> Secrets.json
          echo "NEZHA_SERVER = '${NEZHA_SERVER}'" >> Secrets.json
          echo "NEZHA_PORT = '${NEZHA_PORT}'" >> Secrets.json
          echo "NEZHA_KEY = '${NEZHA_KEY}'" >> Secrets.json
          echo "ARGO_DOMAIN = '${ARGO_DOMAIN}'" >> Secrets.json
          echo "ARGO_AUTH = '${ARGO_AUTH}'" >> Secrets.json
          echo "ARGO_PORT = '${ARGO_PORT:-8080}'" >> Secrets.json
          echo "CFIP = '${CFIP:-cf.877774.xyz}'" >> Secrets.json
          echo "CFPORT = '${CFPORT:-443}'" >> Secrets.json
          echo "NAME = '${NAME:-Appwrite}'" >> Secrets.json
          echo "FILE_PATH = '${FILE_PATH:-./tmp}'" >> Secrets.json
          echo "SUB_PATH = '${SUB_PATH:-sub}'" >> Secrets.json
          
          echo "Secrets.json created successfully:"
          cat Secrets.json

      - name: Deploy to Appwrite
        env:
          Appwrite_API_KEY: ${{ secrets.Appwrite_API_KEY }}
        run: |
          package Appwrite deploy --name Appwrite-app
